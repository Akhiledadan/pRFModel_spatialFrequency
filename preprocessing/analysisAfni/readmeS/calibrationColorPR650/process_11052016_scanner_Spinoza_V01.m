function process_11052016_scanner_Spinoza_V01% calibration taken on PR650 luminometer, 01/Dec/2010, for new long cablex = fliplr([255 235 216 196 177 157 137 118 98 78 59 ])'./255;% yi = [NaN   NaN      NaN     NaN;...%       4.65    8.04      4.17     NaN;...%       12.1    36.9      8.09     49.9;...%       25.4    97.2      17.0     131;...%       45.0    186       29.5     252;...%       63.6    273       41.6     372;...  %       85.8    381       56.5     560;...%       114     536       75.6     712;...%       147     793       99.8     1022];% % yi = [6.6   6.6      6.6     6.6;...%       8.4    10.7      8.26     14.1;...%       22.3    45.9      16     70.8;...%       59    146      36     225;...%       129    368       75     551;...%       218    656       121     956;...  %       280    1007       178     1453;...%       363     1613       250     2078;...%       437     2316       296     3018];  yi = [0.61  2.32    0.35    3.49;...      1.07  4.21    0.59    6.32;...      1.68  6.81    0.93    10.2;...      2.50  10.1    1.35    14.9;...      3.48  13.9    1.85    20.5;...      4.79  19.0    2.53    27.8;...      6.34  24.9    3.33    36.3;...      7.97  31.4    4.28    45.4;...        9.72  38.7    5.26    55.7;...      11.8  47.9    6.48    67.9;...      14.8   61.6   8.34    85.4];    %  yi = [1.48    1.48    1.48    1.48;...%      5.74  37.2    4.11    53.3;...%      19.3  164     12.6    137;...%      42.8  381     26.5    554;...%      73.1  649     45.7    985;...%      112   1010    69.7    1522;...  %      167   1535    103     3229;...%      211   2025   121     4239;...%      214   2311        123 4239];  % d = sum(yi(:,[1:3]),2)-yi(:,4); % diff RGB - white% d = median(d(3:end));% yi(1,:) = d./3; % RGB is higher due to 3x black leakage% yi(2,4) = sum(yi(2,1:3))-d;y = yi;%       % % interp NaN assume similar curves% Yint = yi;% %Yint(:,[2 4])=0;% for n=2%     X = [yi(:,n) zeros(size(yi(:,1)))];%     Y = yi(:,2);%     B = pinv(X(2:9,:))*Y(2:9);%     Yint(:,1) = Yint(:,1)+(X*B)./2;% end% % % % replace only iffy values% y = yi;% %y(8:9,2) = Yint(8:9,2);y = y-mean(yi(1,:));y = y ./ (ones(size(y,1),1)*max(y));% precision = bitsbits = 8;ngamma = 2.^bits;% fitxint = linspace(0,1,ngamma)';yFit1 = interp1( x, y(:,1), xint, 'pchip', 'extrap' );yFit2 = interp1( x, y(:,2), xint, 'pchip', 'extrap' );yFit3 = interp1( x, y(:,3), xint, 'pchip', 'extrap' );for n=1:3,    %p{n} = fminsearch(@(a) cumgaussfit(a,x,y(:,n)),[0.5 0.2]');    %yint(:,n) = cumulativegaussian(xint,p{n}(1),p{n}(2));    yint(:,n) = interp1( x, y(:,n), xint, 'pchip', 'extrap' );                %yint(:,n)=yint(:,n)-min(yint(:,n));    %yint(:,n)=yint(:,n)./max(yint(:,n));end% invertcmapMax = ngamma-1;gamma = zeros(cmapMax+1,3);precise = linspace(0, cmapMax, size(yint,1) )'/cmapMax; for jj = 1:3	%tmp = cumulativegaussian(precise,p{jj}(1),p{jj}(2));    tmp = yint(:,jj);    %tmp = tmp-min(tmp); tmp = tmp./max(tmp);	for ii=0:cmapMax;		[junk placetmp] = min(abs(ii/cmapMax-tmp));		gamma(ii+1,jj) = precise(placetmp);	endendgamma(gamma>1)=1;gamma(gamma<0)=0;% plot gammafigure(1);clf;X = [0:255]'./255;plot(x,y,'o');hold on;plot(x,mean(y,2),'kx','MarkerSize',20);hold on;plot(xint,yint);axis([0 1 0 1]);axis square;% plot inverted gammafigure(2);clf;plot(y,x,'o');hold on;plot(mean(y,2),x,'kx','MarkerSize',20);hold on;plot(xint,gamma);axis([0 1 0 1]);axis square;yint(yint>1)=1;yint(yint<0)=0;gammaTable = round(gamma.*cmapMax);gamma = gammaTable./(ngamma-1);save('gamma.mat','gamma','gammaTable');returnfunction [e]=cumgaussfit(p,x,y)f=cumulativegaussian(x,p(1),p(2));f=f-min(f);f=f./max(f);e=norm(y-f);returnfunction y = cumulativegaussian(x,mu,sigma)y = 0.5 * erfc( (mu - x) ./ (sigma * sqrt(2)));y(y<0) = 0;y(y>1) = 1;return